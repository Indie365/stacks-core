version: 2
jobs:
  deploy:
    working_directory: /build
    docker:
      - image: rust:1.40-stretch
    steps:
      - checkout
      - run:
          command: |
            bash build-scripts/start-builds.sh
      - store_artifacts:
          path: /build/dist/
          destination: dist/
  test_demo:
    working_directory: /test
    docker:
      - image: rust:1.40-stretch
    steps:
      - checkout
      - run:
          command: |
            cargo build --release && cargo install --path . 
      - run:
          command: |
            blockstack-core local initialize db &&
            blockstack-core local check sample-contracts/tokens.clar db &&
            blockstack-core local launch S1G2081040G2081040G2081040G208105NK8PE5.tokens sample-contracts/tokens.clar db &&
            blockstack-core local check sample-contracts/names.clar db &&
            blockstack-core local launch S1G2081040G2081040G2081040G208105NK8PE5.names sample-contracts/names.clar db &&
            blockstack-core local execute db S1G2081040G2081040G2081040G208105NK8PE5.tokens mint! SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR u100000
      - run:
          command: |
            echo "(get-balance 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)" | blockstack-core local eval S1G2081040G2081040G2081040G208105NK8PE5.tokens db
  unit_tests:
    machine: true
    working_directory: ~/blockstack
    steps:
      - checkout
      - run:
          name: Coverage via tarpaulin
          command: |
            docker run --security-opt seccomp=unconfined -v "${PWD}:/volume" xd009642/tarpaulin \
            bash -c "cargo tarpaulin -v --workspace -t 240 -o Xml"
      - run:
          name: Upload to codecov.io
          command: |
            bash <(curl -s https://codecov.io/bash)
  all_tests:
    docker:
      - image: rust:1.40-stretch
    working_directory: ~/blockstack
    steps:
      - checkout
      - run:
          no_output_timeout: 60m
          command: |
            cargo test && cargo test -- --ignored --test-threads 1
workflows:
  version: 2
  build-deploy:
    jobs:
      - unit_tests
      - test_demo
      - deploy
      - all_tests:
          filters:
            branches:
              only:
                - master
                - /.*net.*/
                - /.*marf.*/
                - feature/ignore-slow-serial-tests
